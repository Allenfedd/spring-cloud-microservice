buildscript {
    ext {
        springBootVersion = "2.1.3.RELEASE"
        springCloudVersion = "Greenwich.RELEASE"
        dependencyManagement = "1.0.7.RELEASE"
        //eurekaVersion     = "2.1.1.RELEASE"
    }

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:$dependencyManagement"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
    }
}

allprojects {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }

    group 'com.microweb'
    version '1.0-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea' //統一IntelliJ IDEA 配置文件 => ./gradlew idea
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
            mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
        }
    }
    /** ！！！重要！！！ 避免在idea運作正常，編譯時卻出現 package does not exist錯誤
     * 參考：https://zhuanlan.zhihu.com/p/36102184 
     */
    
    bootJar {
//        classifier ='boot'
        enabled = false
    }
    jar {
        enabled = true
    }
    

    /*
    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
    }
    */

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'

        /* !!!!!禁用!!!!  因與Spring Cloud GateWay不兼容
            compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.1.4.RELEASE'
        */

        /**
         * 各別引入依賴
         * Jackson: jackson-annotations、jackson-core、jackson-databind
         */
        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.9'
        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.9'
        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.9'

        //熱部署
        implementation group: 'org.springframework.boot', name: 'spring-boot-devtools'/*, version: '2.1.5.RELEASE'*/
        //developmentOnly('org.springframework.boot:spring-boot-devtools')

        /** Swagger2 **/
        implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
        implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

        /** AMQP **/
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-amqp', version: '2.1.4.RELEASE'

        /** Lombok **/
        //runtime用不到 =>不會包進最後的jar檔
        compileOnly 'org.projectlombok:lombok:1.18.6'
        testCompileOnly 'org.projectlombok:lombok:1.18.6'

        annotationProcessor 'org.projectlombok:lombok:1.18.6'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.6'

        /** Apache Common-Lang3 **/
        implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
}
/*
Downloads and sets up gradle(No manual installation needed)
task wrapper(type: Wrapper) {
    gradleVersion = '5.2.1' //version required
}
*/